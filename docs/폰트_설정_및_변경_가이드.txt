================================================================================
🎨 React/Next.js 프로젝트에서 폰트 설정 및 변경 완전 가이드
================================================================================

📅 작성일: 2024년
🔧 프로젝트: Restaurant Website
⚡ 대상: 전체 컴포넌트 폰트 시스템

================================================================================
🎯 현재 프로젝트에 설정된 폰트들
================================================================================

📁 위치: public/fonts/
📋 설정된 폰트 목록:

1️⃣ Pretendard (기본 본문용 - 깔끔한 읽기)
   - Pretendard-Regular.otf
   - Pretendard-Bold.otf  
   - Pretendard-SemiBold.otf

2️⃣ 마루부리 (감성적인 제목용)
   - MaruBuri-Regular.ttf
   - MaruBuri-Bold.ttf
   - MaruBuri-SemiBold.ttf

3️⃣ 잘난고딕 (임팩트 있는 제목용)
   - JalnanGothicTTF.ttf

4️⃣ 나눔스퀘어라운드 (둥근 귀여운 폰트)
   - NanumSquareRoundEB.ttf

5️⃣ 이서윤체 (손글씨 느낌)
   - LeeSeoyunB.ttf

6️⃣ KOTRA Bold (공식적인 제목용)
   - KOTRA_BOLD.ttf

7️⃣ 나눔바른고딕 (깔끔한 본문용)
   - NanumBarunGothicBold.ttf

================================================================================
🛠️ 사용 가능한 CSS 클래스들
================================================================================

🎯 현재 globals.css에 정의된 폰트 클래스들:

/* 기본 폰트들 (본문용) */
.font-pretendard          ← Pretendard Regular
.font-pretendard-bold     ← Pretendard Bold  
.font-pretendard-semibold ← Pretendard SemiBold

/* 감성적인 폰트들 (제목용) */
.font-maruburi            ← 마루부리 Regular
.font-maruburi-bold       ← 마루부리 Bold
.font-maruburi-semibold   ← 마루부리 SemiBold

/* 임팩트 있는 폰트들 (강조용) */
.font-jalnan              ← 잘난고딕 (Bold)
.font-nanum-round         ← 나눔스퀘어라운드 (Bold)
.font-kotra               ← KOTRA Bold

/* 특별한 폰트들 */
.font-seoyun              ← 이서윤체 (손글씨 느낌)
.font-nanum-barun         ← 나눔바른고딕

================================================================================
🎯 각 컴포넌트에서 폰트 변경하는 방법
================================================================================

📁 src/components/sections/hero.tsx:
```javascript
const DESIGN_CONFIG = {
  fonts: {
    title: 'font-jalnan',        ← 메인 제목 폰트
    subtitle: 'font-pretendard', ← 부제목 폰트
    tracking: 'tracking-tight'   ← 글자 간격
  }
}
```

📁 src/components/sections/content-grid.tsx:
```javascript
const DESIGN_CONFIG = {
  fonts: {
    title: 'font-maruburi-bold',    ← 카드 제목 폰트
    description: 'font-pretendard'  ← 설명 텍스트 폰트
  }
}
```

📁 src/components/sections/signature-menu.tsx:
```javascript
const DESIGN_CONFIG = {
  fonts: {
    title: {
      main: 'font-seoyun',        ← 메인 타이틀 폰트
      card: 'font-kotra'          ← 카드 타이틀 폰트
    },
    description: 'font-pretendard', ← 설명 텍스트 폰트
    button: 'font-nanum-barun'      ← 버튼 폰트
  }
}
```

📁 src/app/stake-review/page.tsx:
```javascript
const DESIGN_CONFIG = {
  fonts: {
    hero: {
      title: 'font-nanum-round',        ← Hero 제목 폰트
      subtitle: 'font-maruburi',        ← Hero 부제목 폰트
      description: 'font-pretendard',   ← Hero 설명 폰트
      stats: 'font-pretendard-semibold' ← 통계 폰트
    },
    filter: {
      button: 'font-pretendard-semibold', ← 필터 버튼 폰트
      count: 'font-pretendard'            ← 카운트 폰트
    },
    card: {
      username: 'font-maruburi-semibold',  ← 사용자명 폰트
      timestamp: 'font-pretendard',        ← 시간 폰트
      caption: 'font-pretendard',          ← 캡션 폰트
      hashtag: 'font-pretendard-semibold'  ← 해시태그 폰트
    }
  }
}
```

================================================================================
🚀 폰트 변경 실전 예시
================================================================================

1️⃣ Hero 섹션의 제목을 손글씨체로 변경:
```javascript
// src/components/sections/hero.tsx
const DESIGN_CONFIG = {
  fonts: {
    title: 'font-seoyun',     // 잘난고딕 → 이서윤체로 변경
    subtitle: 'font-maruburi' // Pretendard → 마루부리로 변경
  }
}
```

2️⃣ 카드 제목을 임팩트 있게 변경:
```javascript
// src/components/sections/content-grid.tsx
const DESIGN_CONFIG = {
  fonts: {
    title: 'font-jalnan',        // 마루부리 → 잘난고딕으로 변경
    description: 'font-maruburi' // Pretendard → 마루부리로 변경
  }
}
```

3️⃣ 메뉴 설명을 둥근 폰트로 변경:
```javascript
// src/components/sections/signature-menu.tsx
const DESIGN_CONFIG = {
  fonts: {
    description: 'font-nanum-round', // Pretendard → 나눔라운드로 변경
  }
}
```

================================================================================
🆕 새로운 폰트 추가하는 방법
================================================================================

🎯 단계별 가이드:

1️⃣ 폰트 파일 추가:
   📁 위치: public/fonts/새폰트.ttf (또는 .otf)

2️⃣ layout.tsx에서 폰트 로드:
```javascript
// src/app/layout.tsx
import localFont from "next/font/local";

// 새 폰트 추가
const 새폰트이름 = localFont({
  src: "../../public/fonts/새폰트.ttf",
  variable: "--font-새폰트이름",
  display: "swap",
});

// body 클래스에 추가
<body className={`
  ${기존폰트들.variable}
  ${새폰트이름.variable}
  antialiased
`}>
```

3️⃣ globals.css에 CSS 클래스 추가:
```css
/* src/app/globals.css */
.font-새폰트 {
  font-family: var(--font-새폰트이름), Arial, sans-serif;
}
```

4️⃣ 컴포넌트에서 사용:
```javascript
// DESIGN_CONFIG에서 사용
fonts: {
  title: 'font-새폰트'
}
```

================================================================================
📋 폰트 선택 가이드라인
================================================================================

🎯 용도별 추천 폰트:

📖 본문 텍스트 (가독성 중요):
   ✅ font-pretendard        ← 기본 권장
   ✅ font-maruburi          ← 감성적
   ✅ font-nanum-barun       ← 깔끔함

🎨 메인 제목 (임팩트 중요):
   ✅ font-jalnan            ← 강한 임팩트
   ✅ font-kotra             ← 공식적
   ✅ font-nanum-round       ← 친근함

✏️ 특별한 포인트:
   ✅ font-seoyun            ← 손글씨 느낌
   ✅ font-maruburi-bold     ← 감성적 강조

🔘 버튼/UI 요소:
   ✅ font-pretendard-semibold ← 기본 권장
   ✅ font-nanum-barun         ← 깔끔함

================================================================================
🎨 폰트 조합 추천
================================================================================

1️⃣ 클래식 조합 (안정적):
   - 제목: font-kotra
   - 본문: font-pretendard
   - 포인트: font-pretendard-bold

2️⃣ 감성적 조합 (따뜻함):
   - 제목: font-maruburi-bold
   - 본문: font-maruburi
   - 포인트: font-seoyun

3️⃣ 모던 조합 (세련됨):
   - 제목: font-jalnan
   - 본문: font-pretendard
   - 포인트: font-nanum-round

4️⃣ 친근한 조합 (귀여움):
   - 제목: font-nanum-round
   - 본문: font-maruburi
   - 포인트: font-seoyun

================================================================================
🛠️ 문제 해결 (Troubleshooting)
================================================================================

❓ 문제: 폰트가 적용되지 않음
✅ 해결책:
   1. 폰트 파일이 public/fonts/에 있는지 확인
   2. layout.tsx에서 import 했는지 확인  
   3. globals.css에 CSS 클래스 추가했는지 확인
   4. 브라우저 캐시 삭제 후 새로고침

❓ 문제: 폰트가 깨져서 보임
✅ 해결책:
   1. 폰트 파일 경로 확인 (대소문자 구분)
   2. 폰트 파일 손상 여부 확인
   3. display: "swap" 설정 확인

❓ 문제: 로딩 속도가 느림
✅ 해결책:
   1. 불필요한 폰트 제거
   2. 폰트 파일 크기 최적화
   3. display: "swap" 사용
   4. preload 설정 고려

❓ 문제: 모바일에서 폰트가 다르게 보임
✅ 해결책:
   1. fallback 폰트 설정 확인
   2. 반응형 폰트 크기 설정
   3. 모바일 브라우저별 테스트

================================================================================
🔧 고급 설정
================================================================================

1️⃣ 폰트 가중치 설정:
```javascript
const customFont = localFont({
  src: [
    {
      path: "../../public/fonts/Font-Light.ttf",
      weight: "300",
      style: "normal",
    },
    {
      path: "../../public/fonts/Font-Regular.ttf", 
      weight: "400",
      style: "normal",
    },
    {
      path: "../../public/fonts/Font-Bold.ttf",
      weight: "700", 
      style: "normal",
    },
  ],
  variable: "--font-custom",
  display: "swap",
});
```

2️⃣ 조건부 폰트 적용:
```javascript
// DESIGN_CONFIG에서
fonts: {
  title: isMobile ? 'font-nanum-round' : 'font-jalnan'
}
```

3️⃣ 다국어 폰트 설정:
```javascript
fonts: {
  korean: 'font-maruburi',
  english: 'font-pretendard'
}
```

================================================================================
📊 성능 최적화 팁
================================================================================

🚀 로딩 성능 향상:
1. 사용하지 않는 폰트 제거
2. 폰트 서브셋 사용 (한글만 포함)
3. font-display: swap 활용
4. 중요한 폰트만 preload

💾 메모리 최적화:
1. 동일한 폰트 패밀리 통합 사용
2. 폰트 캐싱 설정
3. 웹폰트 대신 시스템 폰트 고려

🎯 사용자 경험 향상:
1. 폰트 로딩 중 fallback 폰트 설정
2. 폰트 크기 responsive 설정
3. 접근성 고려한 폰트 선택

================================================================================
📋 체크리스트
================================================================================

새로운 폰트를 추가할 때 확인할 것들:

□ 폰트 파일이 public/fonts/에 정상적으로 위치하는가?
□ layout.tsx에서 localFont로 import 했는가?
□ globals.css에 CSS 클래스를 추가했는가?
□ CSS 변수명이 일치하는가? (--font-xxx)
□ 폰트 파일 확장자가 올바른가? (.ttf, .otf, .woff2)
□ 브라우저에서 폰트가 정상 로딩되는가?
□ 모바일에서도 정상 작동하는가?
□ 폰트 라이선스는 문제없는가?

기존 폰트를 변경할 때 확인할 것들:

□ DESIGN_CONFIG의 fonts 섹션을 수정했는가?
□ 올바른 CSS 클래스명을 사용했는가?
□ 변경 후 전체적인 디자인 일관성은 유지되는가?
□ 가독성에 문제는 없는가?
□ 다양한 화면 크기에서 테스트했는가?

================================================================================
🎯 실전 적용 예시
================================================================================

🚀 케이스 1: 전체 사이트를 더 감성적으로 만들기
```javascript
// 모든 컴포넌트의 DESIGN_CONFIG에서
fonts: {
  title: 'font-maruburi-bold',      // 제목은 마루부리 볼드
  subtitle: 'font-maruburi',        // 부제목은 마루부리 일반
  description: 'font-pretendard',   // 본문은 Pretendard 유지
  button: 'font-maruburi-semibold'  // 버튼은 마루부리 세미볼드
}
```

🚀 케이스 2: 브랜드 아이덴티티 강화
```javascript
// 메인 제목들을 브랜드 폰트로 통일
fonts: {
  title: 'font-kotra',              // 공식적인 느낌
  subtitle: 'font-pretendard-bold', // 깔끔한 강조
  description: 'font-pretendard'    // 읽기 편한 본문
}
```

🚀 케이스 3: 젊고 트렌디한 느낌으로
```javascript
fonts: {
  title: 'font-jalnan',             // 임팩트 있는 제목
  subtitle: 'font-nanum-round',     // 친근한 부제목  
  description: 'font-pretendard'    // 깔끔한 본문
}
```

================================================================================
🔗 관련 파일들
================================================================================

📁 폰트 설정 관련 주요 파일들:

1. src/app/layout.tsx              ← 폰트 로드 및 전역 설정
2. src/app/globals.css             ← CSS 클래스 정의
3. public/fonts/                   ← 폰트 파일들 저장소

📁 컴포넌트별 폰트 설정 파일들:

1. src/components/sections/hero.tsx
2. src/components/sections/content-grid.tsx  
3. src/components/sections/signature-menu.tsx
4. src/app/stake-review/page.tsx

================================================================================
📞 추가 도움이 필요할 때
================================================================================

1. 이 문서의 예시 코드 참조
2. 기존 설정된 컴포넌트 코드 참조
3. Google Fonts 대신 로컬 폰트 사용 가이드 참조
4. Next.js 공식 문서의 Font Optimization 섹션 참조

💡 폰트 선택이 어려울 때:
- 브랜드 톤앤매너에 맞는 폰트 선택
- 타겟 사용자 연령대 고려
- 가독성과 디자인의 균형 고려
- A/B 테스트로 사용자 반응 확인

================================================================================
끝.
================================================================================ 